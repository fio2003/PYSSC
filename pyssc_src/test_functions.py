from entropic_affinities import ea
from entropic_affinities import nnsqdist
import unittest

import numpy as np
X = [[0.435994902142004, 0.330334821003874],
     [0.0259262318278913, 0.204648634037843],
     [0.549662477878709, 0.619270966350664],
     [0.435322392618277, 0.299654673674523],
     [0.420367802087489, 0.266827275102867],
     [0.562113383276930, 0.578533514781667],
     [0.552914209427704, 0.585397529263949],
     [0.513457994534493, 0.549423683738193],
     [0.551357812126575, 0.584656148535747],
     [0.518443986564692, 0.507964547700906]]
X = np.array(X)

corr_first = np.sqrt(( X[0][0] - X[1][0])**2 + (X[0][1] - X[1][1])**2)
corr_sec = np.sqrt(( X[0][0] - X[2][0])**2 + (X[0][1] - X[2][1])**2)

class TestStringMethods(unittest.TestCase):
    def test_ea_1(self, export_file=False):
        import struct as st

        export_file = True
        if export_file:
            totsize = X.shape[0] * X.shape[1]
            FM = np.reshape(X, (totsize, 1))
            FMPacked = st.pack(str(totsize) + 'd', *FM)
            with open('./export_for_test' + '.dat', 'wb') as file:
                file.write(FMPacked)
        import_file = True
        if import_file:
            with open('distances.dat', 'rb') as file:
                initial_dist = np.frombuffer(file.read(), dtype=np.float64, count=-1)

            with open('indices.dat', 'rb') as file:
                initial_ind = np.frombuffer(file.read(), dtype=np.uint32, count=-1)

            good_dist = abs(np.reshape(initial_dist, (10, -1)))
            good_ind = np.reshape(initial_ind, (10, -1))
            K = good_ind.shape[1]

            final_matr = np.zeros((10, 10))

            for i in range(10):
                final_matr[i, good_ind[i]] = good_dist[i]
        K = 5
        W,s = ea(X, K)
        a = [[0, 0.0013946 , 0.0198902 , 0.36070956, 0.32597332, 0.03529809, 0.03401617, 0.07205524, 0.03478805, 0.11587476],
        [ 0.24968724, 0, 0.01395359, 0.27062674, 0.32691751, 0.01718236, 0.01807414, 0.03740518, 0.01851722, 0.04763601],
        [ 2.40414757e-03, 1.25339918e-10, 0.00000000e+00, 9.75113365e-04, 2.84364796e-04, 2.24022931e-01, 2.31186409e-01, 1.81639212e-01, 2.30709492e-01, 1.28778330e-01],
        [ 0.3507271 , 0.00466553, 0.0211146 , 0, 0.34764013, 0.03571684, 0.03431584, 0.06663018, 0.03498612, 0.10420366],
        [ 0.34414407, 0.0142991 , 0.02090036, 0.36579304, 0, 0.0339606 , 0.03272837, 0.06119418, 0.03332547, 0.09365482],
        [ 1.37741723e-03, 1.24687630e-13, 2.05342166e-01, 4.67591137e-04, 9.95142297e-05, 0.00000000e+00, 2.29507780e-01, 1.87186693e-01, 2.29182844e-01, 1.46835994e-01],
        [ 1.43985505e-03, 3.55107733e-13, 2.11393585e-01, 4.90277289e-04, 1.07598508e-04, 2.25817886e-01, 0.00000000e+00, 1.89584366e-01, 2.27695924e-01, 1.43470509e-01],
        [ 1.24043910e-03, 8.77606443e-17, 1.48466364e-01, 2.90948364e-04, 3.91687841e-05, 1.99948919e-01, 2.07363360e-01, 0.00000000e+00, 2.10988812e-01, 2.31661990e-01],
        [ 1.38494239e-03, 2.58096627e-13, 2.10279905e-01, 4.64469187e-04, 9.99622056e-05, 2.25198926e-01, 2.27422337e-01, 1.90918778e-01, 0.00000000e+00, 1.44230681e-01],
        [ 9.36567537e-03, 4.17223327e-15, 1.03123688e-01, 2.97299962e-03, 5.55943275e-04, 1.92046990e-01, 1.86647066e-01, 3.14672080e-01, 1.90615557e-01, 0.00000000e+00]]
        self.assertTrue(sum(sum((W - a)**2)) < 1e-5)

    def test_ea_nnsqdist(self):
        k = 9
        D2, nn = nnsqdist(X, k)
        D2 = np.sqrt(D2)
        final_matr_ea = np.zeros((10, 10))

        for i in range(10):
            final_matr_ea[i, nn[i]] = D2[i]

        import_file = True
        if import_file:
            with open('distances.dat', 'rb') as file:
                initial_dist = np.frombuffer(file.read(), dtype=np.float64, count=-1)

            with open('indices.dat', 'rb') as file:
                initial_ind = np.frombuffer(file.read(), dtype=np.uint32, count=-1)

            good_dist = abs(np.reshape(initial_dist, (10, -1)))
            good_ind = np.reshape(initial_ind, (10, -1))

        final_matr = np.zeros((10, 10))
        for i in range(10):
            final_matr[i, good_ind[i]] = good_dist[i]

        # result is matrix created with knn_rms data represented in dense form
        result_trans = [[ 0.        , 0.42488297, 0.53641483, 0.50135551, 0.50584814, 0.20761924,  0.32941976, 0.57792084, 0.54439942, 0.50444138],
                 [ 0.42488297, 0.        , 0.18108857, 0.07820324, 0.08313888, 0.31830018,  0.15248302, 0.31702552, 0.11956629, 0.08063151],
                 [ 0.53641483, 0.18108857, 0.        , 0.14119454, 0.13807751, 0.36862852,  0.32931299, 0.15441604, 0.16551689, 0.17298196],
                 [ 0.50135551, 0.07820324, 0.14119454, 0.        , 0.00522326, 0.38066364,  0.22386397, 0.29339488, 0.04846336, 0.0322138 ],
                 [ 0.50584814, 0.08313888, 0.13807751, 0.00522326, 0.        , 0.38382116,  0.22908723, 0.29080643, 0.04602656, 0.03490842],
                 [ 0.20761924, 0.31830018, 0.36862852, 0.38066364, 0.38382116, 0.        ,  0.30415497, 0.37924018, 0.4288669 , 0.3958281 ],
                 [ 0.32941976, 0.15248302, 0.32931299, 0.22386397, 0.22908723, 0.30415497,  0.        , 0.44943294, 0.25205549, 0.21116626],
                 [ 0.57792084, 0.31702552, 0.15441604, 0.29339488, 0.29080643, 0.37924018,  0.44943294, 0.        , 0.31989747, 0.325569 ],
                 [ 0.54439942, 0.11956629, 0.16551689, 0.04846336, 0.04602656, 0.4288669 ,  0.25205549, 0.31989747, 0.        , 0.04146576],
                 [ 0.50444138, 0.08063151, 0.17298196, 0.0322138 , 0.03490842, 0.3958281 ,  0.21116626, 0.325569  , 0.04146576, 0. ]]
        result_straight =  [[ 0.        , 0.42889781, 0.3104906 , 0.03068752, 0.06540195, 0.27840342, 0.28058352, 0.23237999, 0.27926321, 0.195832 ],
                          [ 0.42889781, 0.        , 0.66799052, 0.42027534, 0.39931233, 0.6536716 , 0.6501431 , 0.59712399, 0.64844742, 0.57842396],
                          [ 0.3104906 , 0.66799052, 0.        , 0.33945284, 0.37541133, 0.04259771, 0.03402916, 0.07867279, 0.03465631, 0.11560153],
                          [ 0.03068752, 0.42027534, 0.33945284, 0.        , 0.03607323, 0.30634843, 0.30899323, 0.26170543, 0.3077175 , 0.22428153],
                          [ 0.06540195, 0.39931233, 0.37541133, 0.03607323, 0.        , 0.34242165, 0.34504428, 0.29753406, 0.34376384, 0.26031927],
                          [ 0.27840342, 0.6536716 , 0.04259771, 0.30634843, 0.34242165, 0.        , 0.01147778, 0.05669858, 0.01237614, 0.08298792],
                          [ 0.28058352, 0.6501431 , 0.03402916, 0.30899323, 0.34504428, 0.01147778, 0.        , 0.05339392, 0.00172395, 0.08475885],
                          [ 0.23237999, 0.59712399, 0.07867279, 0.26170543, 0.29753406, 0.05669858, 0.05339392, 0.        , 0.05174672, 0.04175787],
                          [ 0.27926321, 0.64844742, 0.03465631, 0.3077175 , 0.34376384, 0.01237614, 0.00172395, 0.05174672, 0.        , 0.08345611],
                          [ 0.195832  , 0.57842396, 0.11560153, 0.22428153, 0.26031927, 0.08298792, 0.08475885, 0.04175787, 0.08345611, 0.        ]]
        result = np.array(result_straight)
        a = 42
        self.assertTrue(sum(sum((final_matr_ea - result)**2)) < 1e-5)

    def test_check_different_dist(self):

        from entropic_affinities import driver, ea
        with open('distances.dat', 'rb') as file:
            initial_dist = np.frombuffer(file.read(), dtype=np.float64, count=-1)

        with open('indices.dat', 'rb') as file:
            initial_ind = np.frombuffer(file.read(), dtype=np.uint32, count=-1)

        good_dist = abs(np.reshape(initial_dist, (10, -1)))
        good_ind = np.reshape(initial_ind, (10, -1))
        result_knn = driver(good_dist, 9, 5, good_ind)

        result_ea = ea(X, 5)[0]
        a = 5
        self.assertTrue(sum(sum((result_knn - result_ea)**2)) < 1e-5)




if __name__ == "__main__":
    unittest.main()